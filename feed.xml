<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://eeehjun.github.io/</id><title>Devlog</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-05-08T22:01:34+09:00</updated> <author> <name>admin</name> <uri>https://eeehjun.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://eeehjun.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://eeehjun.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 admin </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[ue4] UObject reference finder</title><link href="https://eeehjun.github.io/posts/uobject-reference/" rel="alternate" type="text/html" title="[ue4] UObject reference finder" /><published>2022-02-20T00:00:00+09:00</published> <updated>2022-02-20T00:00:00+09:00</updated> <id>https://eeehjun.github.io/posts/uobject-reference/</id> <content src="https://eeehjun.github.io/posts/uobject-reference/" /> <author> <name>eeehjun</name> </author> <category term="Unreal Engine" /> <category term="Manual" /> <summary> UML int32 GetObjReferenceCount(UObject* Obj, TArray&amp;lt;UObject*&amp;gt;* OutReferredToObjects = nullptr) { if(!Obj || !Obj-&amp;gt;IsValidLowLevelFast()) { return -1; } TArray&amp;lt;UObject*&amp;gt; ReferredToObjects; //req outer, ignore archetype, recursive, ignore transient FReferenceFinder ObjectReferenceCollector( ReferredToObjects, Obj, false, true, true, false); ... </summary> </entry> <entry><title>[ue4] UObject reference finder</title><link href="https://eeehjun.github.io/posts/unreal-json-manual/" rel="alternate" type="text/html" title="[ue4] UObject reference finder" /><published>2022-02-20T00:00:00+09:00</published> <updated>2022-02-20T00:00:00+09:00</updated> <id>https://eeehjun.github.io/posts/unreal-json-manual/</id> <content src="https://eeehjun.github.io/posts/unreal-json-manual/" /> <author> <name>eeehjun</name> </author> <category term="Unreal Engine" /> <category term="Manual" /> <summary> UML int32 GetUObjectReferences(UObject* Object, TArray&amp;lt;UObject*&amp;gt;&amp;amp; OutReferredToObjects) { if(!Obj || !Obj-&amp;gt;IsValidLowLevelFast()) { return -1; } TArray&amp;lt;UObject*&amp;gt; ReferredToObjects; FReferenceFinder ObjectReferenceCollector( ReferredToObjects, Obj, false, true, true, false); ObjectReferenceCollector.FindReferences( Obj ); if(OutRefe... </summary> </entry> <entry><title>Template Method</title><link href="https://eeehjun.github.io/posts/template-method/" rel="alternate" type="text/html" title="Template Method" /><published>2022-02-20T00:00:00+09:00</published> <updated>2022-02-20T00:00:00+09:00</updated> <id>https://eeehjun.github.io/posts/template-method/</id> <content src="https://eeehjun.github.io/posts/template-method/" /> <author> <name>eeehjun</name> </author> <category term="Design Pattern" /> <category term="Behavior" /> <summary> 템플릿 메소드 패턴은 우리가 흔히 사용하고 있는 패턴 중 하나이다. 추상 클래스와 추상 메소드를 준비하고, 하위 클래스는 상속을 통해 이를 구현하는 방식이다. 템플릿 메소드 패턴의 핵심은 상속을 통해 추상 메소드를 서로 다른 방식으로 구현할 수 있다는 점이다. 이 부분은 시스템을 확장해 나간다는 측면에서 OCP원칙을 준수하고 있다고 볼 수 있다. UML </summary> </entry> <entry><title>[ue4] Module</title><link href="https://eeehjun.github.io/posts/module/" rel="alternate" type="text/html" title="[ue4] Module" /><published>2022-02-19T00:00:00+09:00</published> <updated>2022-02-19T00:00:00+09:00</updated> <id>https://eeehjun.github.io/posts/module/</id> <content src="https://eeehjun.github.io/posts/module/" /> <author> <name>eeehjun</name> </author> <category term="Unreal Engine" /> <category term="Wiki" /> <summary>                                                                                                    Public Directory &amp;amp; Private Directory 엔진에서는 기본적으로 Public Directory와 Private Direcotry를 구분한다. 이는 해당 모듈의 기능을 다른 모듈에서 참조하도록 하기 위함인데, Public Directory에 넣고 MODULE_API를 달아주면 다른 모듈에서 참조가 가능하고, Private Directory에 넣으면 다른 모듈에서 참조할 수 없도록 해야한다. Private Directory에 MODULE_API 달면 접근은 가능하다. 하지만 이렇... </summary> </entry> <entry><title>[ue4] Engine Launch</title><link href="https://eeehjun.github.io/posts/engine-launch/" rel="alternate" type="text/html" title="[ue4] Engine Launch" /><published>2022-02-19T00:00:00+09:00</published> <updated>2022-02-19T00:00:00+09:00</updated> <id>https://eeehjun.github.io/posts/engine-launch/</id> <content src="https://eeehjun.github.io/posts/engine-launch/" /> <author> <name>eeehjun</name> </author> <category term="Unreal Engine" /> <category term="Wiki" /> <summary>                                                                                                    Engine Launch int32 GuardedMain( const TCHAR* CmdLine ) { EnginePreInit( CmdLine ); EngineInit(); while( !IsEngineExitRequested() ) { EngineTick(); } EngineExit(); } GEngineLoop.PreInit LoadCoreModules CoreUObject LoadPreInitModules Engine Re... </summary> </entry> </feed>
